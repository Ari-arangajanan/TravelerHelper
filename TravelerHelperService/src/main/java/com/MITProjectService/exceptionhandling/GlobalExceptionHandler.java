package com.MITProjectService.exceptionhandling;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.ControllerAdvice;import org.springframework.web.bind.annotation.ExceptionHandler;@ControllerAdvicepublic class GlobalExceptionHandler {    @ExceptionHandler(DataTransactionalException.class)    public ResponseEntity<String> handleUserRegistrationException(DataTransactionalException ex) {        // Log the exception if necessary        return new ResponseEntity<>(ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);    }    // Handle other exceptions here, for example:    @ExceptionHandler(Exception.class)    public ResponseEntity<String> handleGenericException(Exception ex) {        // Log the exception if necessary        return new ResponseEntity<>(ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);    }    @ExceptionHandler(RedisServerNotRunningException.class)    public ResponseEntity<String> handleRedisServerNotRunningException(RedisServerNotRunningException ex) {        // Log the exception if necessary        // For example: log.error("Redis server error occurred: ", ex);        return new ResponseEntity<>(ex.getMessage(), HttpStatus.SERVICE_UNAVAILABLE);    }}