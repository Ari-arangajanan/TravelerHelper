//package com.MITProjectService.utils;////import jakarta.persistence.EntityManager;//import jakarta.persistence.EntityManagerFactory;//import jakarta.persistence.Persistence;//import jakarta.persistence.PersistenceContext;//import org.slf4j.Logger;//import org.slf4j.LoggerFactory;//import org.springframework.beans.factory.annotation.Qualifier;//import org.springframework.beans.factory.annotation.Value;//import org.springframework.boot.autoconfigure.domain.EntityScan;//import org.springframework.context.annotation.Bean;//import org.springframework.context.annotation.Configuration;//import org.springframework.data.jpa.repository.config.EnableJpaRepositories;//import org.springframework.jdbc.datasource.DriverManagerDataSource;////import javax.sql.DataSource;////@Configuration//@EnableJpaRepositories(basePackages = "com.MITProjectService.admin.repositories")//@EntityScan(basePackages = "com.MITProjectService.admin.domain")//public class DbConfig {//    private final Logger log = LoggerFactory.getLogger(DbConfig.class);////    @Value("${spring.datasource.url}")//    private String dbUrl;////    @Value("${spring.datasource.username}")//    private String dbUsername;////    @Value("${spring.datasource.password}")//    private String dbPassword;////    @Value("${spring.datasource.driver-class-name}")//    private String driverClassName;//////    @Bean("dataSource")//    public DataSource dataSource() {//        DriverManagerDataSource dataSource = new DriverManagerDataSource();//        dataSource.setUrl(dbUrl);//        dataSource.setUsername(dbUsername);//        dataSource.setPassword(dbPassword);//        dataSource.setDriverClassName(driverClassName);//        return dataSource;//    }////    @Bean("entityManager")//    @PersistenceContext//    public EntityManager entityManager(EntityManagerFactory entityManagerFactory) {//        return entityManagerFactory.createEntityManager();//    }//////    @Bean////    public EntityManagerFactory entityManagerFactory() {////        return Persistence.createEntityManagerFactory("mainDB");////    }//}