package com.MITProjectService.utils;import jakarta.persistence.EntityManager;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;@Componentpublic class DatabaseUtil {    @Autowired    private EntityManager entityManager;    /**     * Fetches data dynamically from a table based on selected fields and optional conditions.     *     * @param tableName The name of the table to query.     * @param fields    List of fields/columns to fetch.     * @param condition Optional condition (e.g., WHERE clause).     * @return List of maps, where each map represents a row as key-value pairs.     */    public List<Map<String, Object>> getDropDownlist(String tableName, List<String> fields, String condition) {        String fieldStrings = String.join(",", fields);        // Build the query        String sql = "select " + fieldStrings + " from " + tableName;        if (condition != null && !condition.isEmpty()) {            sql += " where " + condition;        }        List<Object[]> result = entityManager.createNativeQuery(sql).getResultList();        List<Map<String, Object>> jsonList = new ArrayList<>();        for (Object[] row : result) {            Map<String, Object> map = new HashMap<>();            for (int i = 0; i < fields.size(); i++) {                map.put(fields.get(i), row[i]);            }            jsonList.add(map);        }        return jsonList;    }    // Overloaded method with no condition    public List<Map<String, Object>> getDropDownlist(String tableName, List<String> fields){        return getDropDownlist(tableName,fields,null);    }}