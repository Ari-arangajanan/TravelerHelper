package com.MITProjectService.bot.domain;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonManagedReference;import com.fasterxml.jackson.annotation.JsonProperty;import jakarta.persistence.*;import lombok.Data;import java.io.Serial;import java.io.Serializable;import java.time.LocalDateTime;@Data@Entity@Table(name = "bookings")public class Bookings implements Serializable {    @Serial    private static final long serialVersionUID = 1L;    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @ManyToOne    @JoinColumn(name = "service_type_id", referencedColumnName = "id", nullable = false)    @JsonManagedReference    @JsonIgnore    private ServiceType serviceType; // Links to ServiceType    @ManyToOne    @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false)    @JsonManagedReference    @JsonIgnore    private SnUser user; // Links to User    @Column(name = "status", nullable = false)    private int status; // PENDING 0, ACCEPTED 1, REJECTED 2    @Column(name = "created_at", nullable = false, updatable = false)    private LocalDateTime createdAt;    @Column(name = "updated_at")    private LocalDateTime updatedAt;    @Column(name = "bookingDateFrom", nullable = false)    private LocalDateTime bookingDateFrom;    @Column(name = "bookingDateTo", nullable = false)    private LocalDateTime bookingDateTo;    @Column(name = "price", nullable = false)    private Double price;    @Column(name = "reject_reason")    private String rejectReason;    @ManyToOne    @JoinColumn(name = "service_id", referencedColumnName = "id", nullable = false)    @JsonManagedReference    @JsonIgnore    private Services services;    @Transient    @JsonProperty("user_id")    public Long getUserId() {        return user.getId();    }    @Transient    @JsonProperty("serviceProvider_id")    public Long getServiceProviderId() {        return services.getServiceProvider().getId();    }    @Transient    @JsonProperty("service_id")    public Long getServiceId() {        return services.getId();    }    @PrePersist    protected void onCreate() {        createdAt = LocalDateTime.now();        services = serviceType.getServiceRegistration().getServices();    }    @PreUpdate    protected void onUpdate() {        updatedAt = LocalDateTime.now();    }}