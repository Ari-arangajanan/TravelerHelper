package com.MITProjectService.bot.domain;import com.fasterxml.jackson.annotation.JsonBackReference;import com.fasterxml.jackson.annotation.JsonManagedReference;import jakarta.persistence.*;import lombok.Data;import lombok.ToString;import java.util.List;@Data@Entity@Table(name = "service_type")public class ServiceType {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @ManyToOne    @JoinColumn(name = "service_registration_id", referencedColumnName = "id", nullable = false)    @ToString.Exclude // Exclude to avoid circular reference    @JsonBackReference    private ServiceRegistration serviceRegistration; // Link to ServiceRegistration    @OneToMany(mappedBy = "serviceType", cascade = CascadeType.ALL, orphanRemoval = true)    @ToString.Exclude // Exclude to avoid circular reference    @JsonManagedReference    private List<ServiceAttribute> serviceAttributes; // Temporary attributes    @OneToMany(mappedBy = "serviceType", cascade = CascadeType.ALL, orphanRemoval = true)    @ToString.Exclude // Exclude to avoid circular reference    @JsonManagedReference    private List<PricingRuleRegistration> pricingRuleRegistrations; // Temporary pricing rules    @Column(name = "type_name", nullable = false)    private String typeName;    @Column(name = "description")    private String description;    @Column(name = "price", nullable = false)    private Double price;    @Column(name = "capacity", nullable = false)    private Integer capacity;}