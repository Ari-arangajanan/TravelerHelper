package com.MITProjectService.bot.domain;import com.MITProjectService.bot.enums.PaymentServiceEnum;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonProperty;import jakarta.persistence.*;import lombok.Data;import java.time.LocalDateTime;@Data@Entity@Table(name = "hired_services_log")public class HiredServicesLog {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @ManyToOne    @JoinColumn(name = "booking_id", referencedColumnName = "id", nullable = false, unique = true)    @JsonIgnore    private Bookings booking;    @ManyToOne    @JoinColumn(name = "service_provider_id", referencedColumnName = "id", nullable = false)    @JsonIgnore    private SnUser serviceProvider;    @ManyToOne    @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false)    @JsonIgnore    private SnUser user;    @ManyToOne    @JoinColumn(name = "payment_id", referencedColumnName = "id", nullable = false)    private Payment payment;    @Column(name = "service_name", nullable = false)    private String serviceName;    @Column(name = "price", nullable = false)    private Double price;    @Column(name = "status", nullable = false)    private Integer status; // e.g., COMPLETED, CANCELLED, REFUNDED    @Column(name = "hired_at", nullable = false)    private LocalDateTime hiredAt;    @Column(name = "completed_at")    private LocalDateTime completedAt;    @Column(name = "order_id")    private String orderId;    @Transient    @JsonProperty( "payment_id")    public Long getPaymentId() {        return payment.getId();    }    @Transient    @JsonProperty("paymentStatus")    public String getPaymentStatus() {        return PaymentServiceEnum.fromValue(payment.getPaymentStatus()).toString();    }    @Transient    @JsonProperty("price")    public Double getPrice() {        return payment.getAmount();    }    @Transient    @JsonProperty("booking_id")    public Long getBookingId() {        return booking.getId();    }    @Transient    @JsonProperty("service_type_name")    public String getServiceType() {        return booking.getServiceType().getTypeName();    }    @Transient    @JsonProperty("service_type_id")    public Long getServiceTypeId() {        return booking.getServiceType().getId();    }    @PrePersist    protected void onCreate() {        hiredAt = LocalDateTime.now();    }}