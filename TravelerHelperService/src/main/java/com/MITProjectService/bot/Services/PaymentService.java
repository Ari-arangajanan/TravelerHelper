package com.MITProjectService.bot.Services;import com.MITProjectService.bot.domain.Payment;import com.MITProjectService.bot.request.PaymentRequest;public interface PaymentService {    /**     * Processes a payment request based on the specified payment method.     *     * @param paymentRequest The {@link PaymentRequest} containing payment details.     * @return A response string indicating the payment status.     * @throws RuntimeException If the booking is not found or an unsupported payment method is used.     */    String pay(PaymentRequest paymentRequest);    /**     * Saves a new payment or updates an existing one.     *     * @param payment The {@link Payment} object to be saved or updated.     * @return The persisted {@link Payment} object.     * @throws IllegalArgumentException If the provided payment object is {@code null}.     */    Payment saveOrUpdate(Payment payment);    /**     * Retrieves a payment record associated with the given booking ID.     *     * @param id The unique identifier of the booking.     * @return The corresponding {@link Payment} object.     * @throws RuntimeException If no payment is found for the given booking ID.     */    Payment findByBookingId(Long id);    /**     * Retrieves the invoice details for a given payment request.     *     * @param paymentRequest The {@link PaymentRequest} containing the order ID.     * @return The corresponding {@link Payment} object.     * @throws RuntimeException If no payment is found for the given order ID.     */    Payment getInvoice(PaymentRequest paymentRequest);    /**     * Marks a payment as successful for PayHere transactions.     *     * @param paymentRequest The {@link PaymentRequest} containing transaction details.     * @return The updated {@link Payment} object after marking it as paid.     * @throws RuntimeException If the payment record is not found or is already marked as paid.     */    Payment payHerePaymentSuccess(PaymentRequest paymentRequest);}