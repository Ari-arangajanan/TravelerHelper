package com.MITProjectService.bot.request;import com.MITProjectCommon.constants.Constants;import lombok.Data;import javax.validation.constraints.*;import java.time.LocalDateTime;@Datapublic class ServiceRequest {    private int page=(int) Constants.DEFAULT_PAGE;    private int limit= (int) Constants.DEFAULT_LIMIT;    @NotNull(message = "Service name is required.")    @Size(min = 2, max = 100, message = "Service name must be between 2 and 100 characters.")    private String serviceName;    @Size(max = 500, message = "Description must not exceed 500 characters.")    private String description;    @NotNull(message = "Category ID is required.")    private Long categoryId;    @NotNull(message = "Provider ID is required.")    private Long providerId;    @NotNull(message = "Base price is required.")    @Positive(message = "Base price must be a positive value.")    private Double basePrice;    @NotNull(message = "Status is required.")    @Min(value = 0, message = "Status must be either 0 (Inactive) or 1 (Active).")    @Max(value = 1, message = "Status must be either 0 (Inactive) or 1 (Active).")    private Integer status;    @NotNull(message = "Latitude is required.")    @DecimalMin(value = "-90.0", message = "Latitude must be between -90 and 90.")    @DecimalMax(value = "90.0", message = "Latitude must be between -90 and 90.")    private Double latitude;    @NotNull(message = "Longitude is required.")    @DecimalMin(value = "-180.0", message = "Longitude must be between -180 and 180.")    @DecimalMax(value = "180.0", message = "Longitude must be between -180 and 180.")    private Double longitude;    // Optionally include timestamps if needed in the request, usually for updates    private LocalDateTime createdAt;    private LocalDateTime updatedAt;    // Optionally include the telegram ID if needed in the request    private long telegramId;}