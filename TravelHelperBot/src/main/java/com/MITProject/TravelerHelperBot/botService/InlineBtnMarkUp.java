package com.MITProject.TravelerHelperBot.botService;import com.MITProjectService.bot.domain.WebAppObj;import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;import org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo;import java.util.ArrayList;import java.util.Collections;import java.util.List;public class InlineBtnMarkUp {    /**     * Creates an InlineKeyboardMarkup with rows of buttons.     *     * @param btnLbl   List of labels for the inline buttons.     * @param callback List of callback data for each button.     * @return InlineKeyboardMarkup with buttons arranged in rows of two.     */    public InlineKeyboardMarkup inlineKeyboardMarkup(List<String> btnLbl, List<String> callback, WebAppObj webAppObj) {        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();        List<InlineKeyboardButton> rowsOfBtn = new ArrayList<>();        // Loop through the button labels and callback data to create buttons00        for (int i =0; i< btnLbl.size(); i++){            InlineKeyboardButton button = new InlineKeyboardButton();            button.setText(btnLbl.get(i));            button.setCallbackData(callback.get(i));            rowsOfBtn.add(button);            // If the row has two buttons, add it to the keyboard and start a new row            if (rowsOfBtn.size() == 2) {                keyboard.add(rowsOfBtn);                rowsOfBtn = new ArrayList<>();  // Start a new row            }        }        // Add the last row if it has buttons left (for odd numbers)        if (!rowsOfBtn.isEmpty()) {            keyboard.add(rowsOfBtn);        }        if (webAppObj != null) {            // Add a web app button at the bottom            InlineKeyboardButton webAppButton = new InlineKeyboardButton();            webAppButton.setText(webAppObj.getWebAppLabel());            webAppButton.setWebApp(new WebAppInfo(webAppObj.getWebAppUrl()));            keyboard.add(Collections.singletonList(webAppButton)); // Add as a single row        }        inlineKeyboardMarkup.setKeyboard(keyboard);        return inlineKeyboardMarkup;    }}