package com.MITProject.TravelerHelperBot.botController;import com.MITProjectService.bot.Services.ServicesService;import com.MITProjectService.bot.dao.jpaRepos.specification.SnServiceFilterSpecification;import com.MITProjectService.bot.domain.Services;import com.MITProjectService.bot.request.ServiceRequest;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.data.jpa.domain.Specification;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.validation.Valid;@RestController@RequestMapping("app/user/service")public class ServiceController {    private final ServicesService servicesService;    public ServiceController(ServicesService servicesService) {        this.servicesService = servicesService;    }    // get services    @PostMapping(value = "/getServices")    public ResponseEntity<?> getAllServices(@Valid @RequestBody ServiceRequest request){        Pageable pageRequest = PageRequest.of(request.getPage(), request.getLimit());        Specification<Services> servicesSpecification = SnServiceFilterSpecification.servicesSpecificationFilter(request);        Page<Services> allServicesPage = servicesService.getServicePage(pageRequest,servicesSpecification);        return ResponseEntity.ok(allServicesPage);    }}