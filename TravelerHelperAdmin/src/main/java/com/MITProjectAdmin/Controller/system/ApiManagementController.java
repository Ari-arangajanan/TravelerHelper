package com.MITProjectAdmin.Controller.system;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import org.springframework.web.method.HandlerMethod;import org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;import org.springframework.web.servlet.mvc.method.RequestMappingInfo;import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;import java.util.*;import java.util.stream.Collectors;@CrossOrigin(origins = "http://localhost:3000", allowCredentials = "true")@RestController@RequestMapping(path = "admin/system")public class ApiManagementController {    @Autowired    private RequestMappingHandlerMapping requestMappingHandlerMapping;    @GetMapping("/availableApis")    public List<Map<String, String>> getAvailableApis() {        return requestMappingHandlerMapping.getHandlerMethods()                .entrySet()                .stream()                .map(entry -> {                    Map<String, String> apiInfo = new HashMap<>();                    RequestMappingInfo mappingInfo = entry.getKey();                    HandlerMethod handlerMethod = entry.getValue();                    // Get the URL patterns (usually only one per mapping)                    Set<String> patterns = mappingInfo.getPatternValues();                    // Get the HTTP method types (GET, POST, etc.)                    Set<RequestMethod> methods = mappingInfo.getMethodsCondition().getMethods();                    apiInfo.put("url", patterns.isEmpty() ? "" : patterns.iterator().next());                    apiInfo.put("method", methods.isEmpty() ? "GET" : methods.iterator().next().name());                    apiInfo.put("description", handlerMethod.getMethod().getName());                    return apiInfo;                })                .collect(Collectors.toList());    }}