package com.MITProjectAdmin.Controller;import com.MITProjectAdmin.common.KeyPairGeneratorUtil;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.ObjectMapper;import org.springframework.web.bind.annotation.*;import javax.crypto.SecretKey;import java.security.KeyPair;import java.security.NoSuchAlgorithmException;import java.security.PrivateKey;import java.security.PublicKey;import java.util.*;@RestController@RequestMapping(path = "/api/v1/hello")public class HelloController {    @GetMapping("/hello")    public String hello(@RequestBody String username) throws NoSuchAlgorithmException {        Map<String, KeyPair> userKeyPairs = new HashMap<>();        KeyPair keyPair = KeyPairGeneratorUtil.generateKeyPair();        userKeyPairs.put(username, keyPair);        System.out.println(userKeyPairs);        return "Hello World!";    }//    @PostMapping("/register")//    public Map<String, KeyPair> register(@RequestBody String username) throws NoSuchAlgorithmException {//        Map<String, KeyPair> userKeyPairs = new HashMap<>();//        KeyPair keyPair = KeyPairGeneratorUtil.generateKeyPair();//        userKeyPairs.put(username, keyPair);//        return userKeyPairs;//    }    @PostMapping("/register")    public String register(@RequestBody String username) throws NoSuchAlgorithmException, JsonProcessingException {        Map<String, String> userKeyPairs = new HashMap<>();        KeyPair keyPair = KeyPairGeneratorUtil.generateKeyPair();        SecretKey secretKey = KeyPairGeneratorUtil.generateSecretKey();        SecretKey secretKey2 = KeyPairGeneratorUtil.generateSecretKey();        PublicKey publicKey = keyPair.getPublic();        PrivateKey privateKey = keyPair.getPrivate();        System.out.println("publicKey: /n"+ publicKey);        System.out.println("privateKey: /n"+ privateKey);        System.out.println("secretKey: /n"+ secretKey);        System.out.println("secretKey2: /n"+ Base64.getEncoder().encodeToString(secretKey2.getEncoded()));        // Convert keys to Base64 encoded strings        String publicKeyString = Base64.getEncoder().encodeToString(publicKey.getEncoded());        String privateKeyString = Base64.getEncoder().encodeToString(privateKey.getEncoded());        // Add keys to the map        userKeyPairs.put("publicKey", publicKeyString);        userKeyPairs.put("privateKey", privateKeyString);        userKeyPairs.put("secretKey", Base64.getEncoder().encodeToString(secretKey.getEncoded()));        userKeyPairs.put("secretKey2", Base64.getEncoder().encodeToString(secretKey2.getEncoded()));        // Convert map to JSON string        ObjectMapper mapper = new ObjectMapper();        return mapper.writeValueAsString(userKeyPairs);    }}