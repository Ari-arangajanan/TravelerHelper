package com.MITProjectAdmin.Controller.management;import com.MITProjectService.bot.Services.ServiceCategoryService;import com.MITProjectService.bot.domain.ServiceCategory;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@CrossOrigin(origins = "http://localhost:5174", allowCredentials = "true")@RestController@RequestMapping(path = "/admin/category")public class ServiceCategoryController {    private final ServiceCategoryService serviceCategoryService;    public ServiceCategoryController(ServiceCategoryService serviceCategoryService) {        this.serviceCategoryService = serviceCategoryService;    }    // Create or Update a ServiceCategory    @PostMapping("/CreateOrUpdate")    public ResponseEntity<ServiceCategory> createOrUpdateServiceCategory(@RequestBody ServiceCategory serviceCategory) {        return ResponseEntity.ok(serviceCategoryService.saveCategory(serviceCategory));    }    // Get all ServiceCategories    @GetMapping("/getAllCategory")    public ResponseEntity<List<ServiceCategory>> getAllServiceCategories() {        return ResponseEntity.ok(serviceCategoryService.getAllCategories());    }    // Get a ServiceCategory by ID    @GetMapping("/{id}")    public ResponseEntity<ServiceCategory> getServiceCategoryById(@PathVariable Long id) {        return serviceCategoryService.getCategoryById(id)                .map(ResponseEntity::ok)                .orElse(ResponseEntity.notFound().build());    }    // Delete a ServiceCategory by ID    @DeleteMapping("/delete/{id}")    public ResponseEntity<Void> deleteServiceCategoryById(@PathVariable Long id) {        serviceCategoryService.deleteCategory(id);        return ResponseEntity.noContent().build();    }    // Update status of a ServiceCategory    @PatchMapping("/{id}/status")    public ResponseEntity<ServiceCategory> updateStatus(@PathVariable Long id, @RequestParam int status) {        return ResponseEntity.ok(serviceCategoryService.updateStatus(id, status));    }}