package com.MITProjectAdmin.Controller.management;import com.MITProjectService.bot.Services.ServiceProviderService;import com.MITProjectService.bot.Services.SnUserService;import com.MITProjectService.bot.domain.ServiceProvider;import com.MITProjectService.bot.domain.SnUser;import com.MITProjectService.bot.request.SnUserRequest;import jakarta.servlet.http.HttpServletResponse;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;@CrossOrigin(origins = "http://localhost:3000", allowCredentials = "true")@RestController@RequestMapping(path = "/admin/systemUser")public class SnUserController {    Logger logger = LoggerFactory.getLogger(SnUserController.class);    private final SnUserService snUserService;    private final ServiceProviderService serviceProviderService;    public SnUserController(SnUserService snUserService, ServiceProviderService serviceProviderService) {        this.snUserService = snUserService;        this.serviceProviderService = serviceProviderService;    }    @PostMapping(value = "/userList")    public ResponseEntity<?> userList(@Valid @RequestBody SnUserRequest userRequest, HttpServletResponse response) {        Pageable pageable = PageRequest.of(userRequest.getPage(), userRequest.getLimit());        Page<SnUser> allUserRoles = snUserService.getAllUsers(pageable);        return new ResponseEntity<>(allUserRoles, HttpStatus.OK);    }    @PostMapping(value = "/serviceProviderList")    public ResponseEntity<?> getAllServiceProvider(@Valid @RequestBody SnUserRequest userRequest, HttpServletResponse response) {        Pageable pageable = PageRequest.of(userRequest.getPage(), userRequest.getLimit());        Page<ServiceProvider> allUserRoles = serviceProviderService.getAllServiceProvider(pageable);        return new ResponseEntity<>(allUserRoles, HttpStatus.OK);    }}